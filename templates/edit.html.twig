{% extends 'layouts/base.html.twig' %}

{% block title %}
SnowTricks
{% endblock %}

{% block body %}
                   
{{ form_start(EditType) }}
    <header class="mb-auto container mt-3">
        <div id="immm" class=" justify-content-center text-bg-dark header-trick" style='background-image: url("{{ asset('/uploads/'~trick.image) }}" );'>
            <div class="d-flex justify-content-end">
                <div class="col-md-1 mt-2 bg-white text-center p-2">
                    {% if app.user %}
                        <div>
                            {{ form_row(EditType.image) }}
                            <small class="p-3 icon"><a href="#" ><i class="fa-solid fa-pencil"></i></a></small>
                            <small class="p-1 icon"><a href="{{ path('annonces_delete_image', {id: trick.id})}}" data-delete data-token="{{ csrf_token('delete' ~ trick.id )}}" class="link"><i class="fa-solid fa-trash"></i></a></small>
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>
    </header>

	<main class="container">
		<div class="container px-4 py-5" id="custom-cards">
            <div class="row py-5">
                <div class="col-12">
                    <div class="form-signin mt-5">
                        {{ form_row(EditType.name) }}
                        {{ form_row(EditType.content) }}
                        {{ form_row(EditType.category) }}
                        </div>
                        <button type="submit" class="btn btn-lg btn-primary btn-block mt-4">Save</button>
                    </div>
                </div>
            </div>  
        </div>	
	</main>
{{ form_end(EditType) }}

    <script type="text/javascript" >
        function createThumbnail(sFile) {
            var oReader = new FileReader();
            oReader.addEventListener('load', function() {
                document.getElementById('immm').style.backgroundImage ="url("+this.result+")" ;
            }, false);

            oReader.readAsDataURL(sFile);

        }

        function changeInputFil(oEvent){
        
            var oInputFile = oEvent.currentTarget,
                sName = oInputFile.name,
                aFiles = oInputFile.files,
                aAllowedTypes = ['png', 'jpg', 'jpeg', 'gif'],
                imgType;  

            for (var i = 0 ; i < aFiles.length ; i++) {
                imgType = aFiles[i].name.split('.');
                imgType = imgType[imgType.length - 1];

                if(aAllowedTypes.indexOf(imgType) != -1) {
                    createThumbnail(aFiles[i]);
                }
            }
        }

        document.addEventListener('DOMContentLoaded',function(){
            var aFileInput = document.forms['edit'].querySelectorAll('[type=file]');
            for(var k = 0; k < aFileInput.length;k++){
                aFileInput[k].addEventListener('change', changeInputFil, false);
            }
        });

        window.onload = () => {
    // Gestion des boutons "Supprimer"
    let links = document.querySelectorAll("[data-delete]")
    
    // On boucle sur links
    for(link of links){
        // On écoute le clic
        link.addEventListener("click", function(e){
            // On empêche la navigation
            e.preventDefault()

            // On demande confirmation
            if(confirm("Voulez-vous supprimer cette image ?")){
                // On envoie une requête Ajax vers le href du lien avec la méthode DELETE
                fetch(this.getAttribute("href"), {
                    method: "DELETE",
                    headers: {
                        "X-Requested-With": "XMLHttpRequest",
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({"_token": this.dataset.token})
                }).then(
                    // On récupère la réponse en JSON
                    response => response.json()
                ).then(data => {
                    if(data.success)
                        this.parentElement.remove()
                    else
                        alert(data.error)
                }).catch(e => alert(e))
            }
        })
    }
}
</script>

{% endblock %}